//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using UnityEngine;
using System.Collections;
namespace SControls
{
	public class STouch
	{
//		public STouch(Vector2 center){
//
//			this.center = center;
//			//STouch ();
//		}
		public STouch(){}
		public STouch(float x,float y ){
			position = new Vector2(x,y);
		}
		public STouch(KeyCode code){
			if(code==KeyCode.A){
				position=new Vector2(160f,88f);
				
			}
			else if(code==KeyCode.W){
				position = new Vector2(107f,141f);
			}
			else if(code==KeyCode.D){position = new Vector2(162,195);}
			else if(code==KeyCode.S){position = new Vector2(214,139);}
		}

		public bool isKeys(KeyCode code){
			if(code==KeyCode.A||code==KeyCode.W||code==KeyCode.D||code==KeyCode.S){
				return true;
			}

			return false;
		}
		public Vector2 position;
		public Vector2 deltaPosition;
		public Vector2 center;
		/// <summary>
		/// 虚拟Jostick要通过fingerId判断多点触摸（非SJoystick）
		/// </summary>
		public int fingerId;
		/// <summary>
		/// touch 状态，Began|Moved\Ended
		/// </summary>
		public TouchPhase phase;
		/// <summary>
		/// return ture if andorid,ios,wp8
		/// </summary>
		/// <value><c>true</c> if is touch plat form; otherwise, <c>false</c>.</value>
		public bool isTouchPlatForm{
			get{
				if(Application.platform == RuntimePlatform.Android ||
				   Application.platform == RuntimePlatform.WP8Player ||
				   Application.platform == RuntimePlatform.IPhonePlayer){
					return true;
				}else{
					return false;
				}
			}
		}

	

		private SDirection direction;
		public SDirection Direction{
			set{
				direction = value;
				switch(direction){
				case SDirection.left:
					
					//position = new Vector2 (107, 140);
					position = new Vector2(center.x -50 , center.y);
					break;
				case SDirection.top_left:
					//position = new Vector2(125,180);//??
					position = new Vector2(center.x - 25,center.y+25);
					break;
				case SDirection.top:
					//position = new Vector2(164,197);
					position = new Vector2(center.x,center.y+50);
					break;
				case SDirection.top_right:
					position = new Vector2 (center.x + 25, center.y + 25);
					//position = new Vector2(205f,180f);
					break;
				case SDirection.right:
					position = new Vector2 (center.x + 50, center.y);
					//position = new Vector2(220,140);
					break;
				case SDirection.bottom_right:
					position = new Vector2 (center.x + 25, center.y - 25);
					//position = new Vector2(205f,105f);
					break;
				case SDirection.bottom:
					position = new Vector2 (center.x, center.y - 50);
					//position=new Vector2(164,88);
					break;
				case SDirection.bottom_left:
					//position =  new Vector2(125f,105f);//??
					position = new Vector2(center.x - 25,center.y - 25);
					break;
				default:
					break;
				}
			}
		}
	
	

	
	
//		private bool isOn(KeyCode code){
//			if(buttonStatus.Contains(code)){
//				if(((TouchPhase)buttonStatus[code])==TouchPhase.Began ||
//				   ((TouchPhase)buttonStatus[code])==TouchPhase.Moved){
//					return true;
//				}
//			}
//			return false;
//		}
//		public bool onA(){return isOn(KeyCode.A);}
//		public bool onW(){return isOn(KeyCode.W);}
//		public bool onD(){return isOn(KeyCode.D);}
//		public bool onS(){return isOn(KeyCode.S);}
	}
}

